unit Display;interface	uses		 Sound, QDOffScreen, Tools, Globals, GameGlobals, GameTools, 		 Resources, Icons;	procedure DoDisplay;implementation	type 		SC=array [0..70] of Point;		SP=^SC;		SH=^SP;	var		SpeedometerConsts:SC;		BlinckTick:longint;	procedure DoDisplay;		var			Speed: integer;			NumStr,ScoreString: Str255;		var			BonRect: Rect;		procedure Waitproc;		begin			if Wait <> 0 then				begin					Speedometerconsts:=SH(GetResource('Sped',1000))^^;					BlinckTick:=0;					if Wait > 38 then						begin							GetIndString(ScoreString, 2000, 6);							NumToString(Level, NumStr);                                                             							ShowMessage(ScoreString,  310 - 80, 200, 36);							ShowMessage(NumStr, 310 +43, 200, 36);							ShowMessage(Info^^.name, 310-Stringwidth(Info^^.name) div 2, 250, 36);						end					else if Wait > 1 then						begin							if (Wait+2) mod 10 =0 then								PlaySound(1100);							SetRect(BonRect, 620 - 38, 480 - 62, 620 - 6, 480 - 30);							if Wait > 8 then								PlotSprite(1021, BonRect)							else								PlotSprite(1022, BonRect);						end					else						begin							PlaySound(1101);							SetRect(BonRect, 620 - 38, 480 - 62, 620 - 6, 480 - 30);							PlotSprite(1023, BonRect)						end;					Wait := Wait - 1;				end;		end;		procedure GameOProc;		begin			if GameOver then				begin					GetIndString(ScoreString, 2000, 3);					ShowMessage(ScoreString, 310 - 100, 240, 36);					GameOCount := GameOCount + 1;				end;		end;		procedure DoneProc;			var timer:longint;		begin			if DoneCount <>0 then			begin				if DoneCount > 0 then					begin						GetIndString(ScoreString, 2000, 4);						ShowMessage(ScoreString, 310 - 120, 240, 36);					end;				if (DoneCount < 0) and (DoneCount > -10) then					begin						if DoneCount <= -1 then							begin								GetIndString(ScoreString, 2001, 1);								NumToString(Level, NumStr);								if NumStr[0]=char(2) then begin									ScoreString[7]:= NumStr[1];									ScoreString[8]:= NumStr[2];								end else									ScoreString[8]:= NumStr[1];								ShowMessage(ScoreString, 310 - 120, 240 - 100, 24);								if DoneCount = -1 then									PlaySound(1105);								delay(15, timer);								KillEngine;							end;						if DoneCount <= -4 then							begin								GetIndString(ScoreString, 2001, 3);								ShowMessage(ScoreString, 310 - 120, 240 - 60, 12);								NumToString(Score, ScoreString);								ShowMessage(ScoreString, 310 - 105, 240 - 40, 18);								if DoneCount = -4 then									PlaySound(1105);								delay(15, timer);							end;						if DoneCount <= -7 then							begin								GetIndString(ScoreString, 2001, 4);								ShowMessage(ScoreString, 310 - 120, 240 - 0, 12);								NumToString(Info^^.Bonus, ScoreString);								ShowMessage(ScoreString, 310 - 105, 240 + 20, 18);								if MultiBonus < 0 then									begin										SetRect(BonRect, 310 -40, 240 + 2, 310 - 16, 240 + 26);										PlotSprite(1030 + abs(multiBonus), BonRect);										AddUpRect(BonRect);										NumToString(Info^^.Bonus * (abs(MultiBonus)+1), ScoreString);										ShowMessage(ScoreString, 310 , 240 + 20, 18);										if DoneCount = -9 then											Info^^.Bonus := Info^^.Bonus * (abs(MultiBonus)+1);									end;								if DoneCount = -7 then									PlaySound(1105);								delay(15, timer);							end;					end;				if (DoneCount = -11) then					begin						GetIndString(ScoreString, 2001, 5);						ShowMessage(ScoreString, 310 - 80, 240 - 29, 24);						DoneCount := -10;						if Info^^.Bonus > 15 then							begin								Score := Score + 15;								Info^^.Bonus := Info^^.Bonus - 15;							end						else							begin								Score := Score + Info^^.Bonus;								Info^^.Bonus := 0;								DoneCount := -20;							end;						if BlinckTick+41<TickCount then 							PlaySound(1106);						NumToString(Score,Numstr);						ShowMessage(NumStr, 310 - 50, 240 +21, 36);					end;				if DoneCount = -20 then					begin						DisposeLevel;						Level := Level + 1;						EnterLevel(Level);					end;			end;		end;		procedure DispProc;			var				 oldclip,Newclip:rgnHandle;				 myIcon:CIconHandle;		begin			SetRect(BonRect, 17, 480 - 86, 81, 480 - 22);			if not Dead then				begin					Speed := (UDSpeed -abs(LRSpeed) div 5);					if Speed<0 then Speed:=0;					PlotSprite(1002, BonRect);					MoveTo(18, 480 - 23);					PenSize(2, 3);					Line(SpeedometerConsts[Speed].h,-SpeedometerConsts[Speed].v);					PenSize(1, 1);					if DoneCount = Wait then						Info^^.Bonus := Info^^.Bonus - 1;					if Info^^.Bonus = 0 then						begin							Dead:=True;								PlaySound(1020);						end;					oldclip:=RaceWindow^.clipRgn;					NewClip:=NewRgn;					SetGWorld(CGrafPtr(RaceWindow),TheScreen);					SetRectRgn(NewClip,0,0,620,480);					RaceWindow^.clipRgn:=NewClip;										if oldscore<>Score then						begin							if (Score div 2000 > oldScore div 2000) and (Score div 2000 > Lastlive) then							begin								Lives:=Lives+1;								Lastlive:=Score div 2000;								PlaySound(1500);								BlinckTick:=TickCount;							end;							NumToString(Score, NumStr);							ShowBgMessage(NumStr, 620 - 65, 480-10, 12,Sb,Sf);						end;											NumToString(Info^^.Bonus, NumStr);					if NumStr[0]<>char(4) then						begin							NumStr[byte(NumStr[0])+1]:=' ';							NumStr[byte(NumStr[0])+2]:=' ';							NumStr[0]:=char(byte(NumStr[0])+2);						end;					ShowBgMessage(NumStr, 620 - 170, 480-10, 12,Sb,Sf);					if (MultiBonus < 0) and (MultiBonus<>oldBonus)then						begin							SetRect(BonRect, 620 - 135, 480-22, 620 - 117, 480-4);							myIcon:=GetCIcon(1040 + abs(multiBonus));							PlotCIcon(BonRect,myIcon);							DisposeCicon(myIcon);						end;					if oldlives<>lives then						begin							NumToString(Lives, NumStr);							ShowBgMessage(NumStr, 620 - 250, 480-10, 12,Sb,Sf);						end;											RaceWindow^.clipRgn:=oldClip;					DisposeRgn(NewClip);					SetGWorld(Screenworld,nil);					oldScore:=Score;					oldLives:=Lives;					oldBonus:=MultiBonus;				end			else				PlotSprite(1003, BonRect);		end;	begin		DispProc;		WaitProc;		DoneProc;		GameOProc;	end;end.